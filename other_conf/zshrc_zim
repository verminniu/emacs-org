# 以下为mac的环境变量设置
alias vscode='/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code'
alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs -nw'
# alias app_emacs='open /opt/homebrew/opt/emacs-mac/Emacs.app'
alias ec='emacsclient -t'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l.='ls -d .* --color=auto'
alias ll='ls -l --color=auto'
alias ls='ls --color=auto'
alias mkproj='echo > .projectile'
alias vi='nvim'
alias vim='nvim'
alias nlp="netstat -AaLlnW"
alias cb="~/code_tools/call_dubbo/call_dubbo.py"
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'

# aviator
alias aviator='~/code_tools/aviator/aviator'

# exec brew install coreutils
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"

export PATH="/usr/local/opt/gettext/bin:$PATH"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"

export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# graphviz
export GRAPHVIZ_DOT="/opt/homebrew/bin/dot"

# mysql client
export LDFLAGS="-L/opt/homebrew/opt/mysql-client/lib $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/mysql-client/include $CPPFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include $CPPFLAGS"

# llvm
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++ $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include $CPPFLAGS"
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

# java
# gradle
export GRADLE_USER_HOME="/Users/vermin/.gradle/"
export GRADLE_HOME="/Users/vermin/code_tools/gradle-4.10.3//"
export PATH="${GRADLE_HOME}/bin:$PATH"
#export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_341.jdk/Contents/Home"
export JAVA_HOME="/Library/Java/JavaVirtualMachines/liberica-jdk-8.jdk/Contents/Home"
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"
export PATH="${JAVA_HOME}/bin:$PATH"
export GROOVY_HOME="/opt/homebrew/opt/groovy/libexec"

# cat
export CAT_HOME="/data/appdatas/cat/"

# go
export GO111MODULE=on
export GOPROXY=https://goproxy.cn
export GOPATH="/usr/local/gopath/"
export PATH="$GOPATH/bin:$PATH"

# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
export HOMEBREW_NO_AUTO_UPDATE=1

export HISTCONTROL=erasedups
export TERM=xterm-256color
export LANG=zh_CN.utf8

# git diff 用less进行分页，需要配置less参数，防止乱码
export LESS=eFRX
export LESSCHARSET=utf-8

# 以下为history配置
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent .slime-history.eld
setopt COMBINING_CHARS
# ----- history end --

# ----- zim begin

zstyle ':zim:zmodule' use 'degit'
ZIM_HOME=~/.zim

# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize modules.
source ${ZIM_HOME}/init.zsh

# ----- zim end

[[ -s "/opt/homebrew/etc/grc.zsh" ]] && source /opt/homebrew/etc/grc.zsh

export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
ulimit -n unlimited
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# # disable sort when completing `git checkout`
# zstyle ':completion:*:git-checkout:*' sort false
# # set descriptions format to enable group support
# zstyle ':completion:*:descriptions' format '[%d]'
# # set list-colors to enable filename colorizing
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# # preview directory's content with exa when completing cd
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# # switch group using `,` and `.`
# zstyle ':fzf-tab:*' switch-group ',' '.'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf配置
# fd替换find，需要先安装fd:
#    brew install fd
export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build} --type f"

# 展示
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --preview '(highlight -O ansi {} || cat {}) 2> /dev/null | head -500'"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

export HOMEBREW_GITHUB_API_TOKEN="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"
