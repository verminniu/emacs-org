# 以下为mac的环境变量设置
alias vscode='/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code'
alias emacs='/opt/homebrew/opt/emacs-plus/bin/emacs -nw'
alias dropshelf='open -a dropshelf'
# alias app_emacs='open /opt/homebrew/opt/emacs-mac/Emacs.app'
alias ec='emacsclient -t'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l.='ls -d .* --color=auto'
alias ll='ls -l --color=auto'
alias ls='ls --color=auto'
alias mkproj='echo > .projectile'
alias vi='nvim'
alias vim='nvim'
alias nlp="netstat -AaLlnW"
alias cb="~/code_tools/call_dubbo/call_dubbo.py"
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'

# aviator
alias aviator='~/code_tools/aviator/aviator'

# brew install gawk grep gnu-sed coreutils
export PATH="/opt/homebrew/opt/gawk/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"

# mysql client
# export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"
# export LDFLAGS="-L/opt/homebrew/opt/mysql-client/lib $LDFLAGS"
# export CPPFLAGS="-I/opt/homebrew/opt/mysql-client/include $CPPFLAGS"
export PATH="/opt/homebrew/opt/mysql@8.4/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/mysql@8.4/lib"
export CPPFLAGS="-I/opt/homebrew/opt/mysql@8.4/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql@8.4/lib/pkgconfig"

alias mysql_start='mysqld_safe --datadir=/opt/homebrew/var/mysql &'
alias mysql_stop='mysqladmin shutdown'

export PATH="$PATH:/Applications/IntelliJ IDEA.app/Contents/MacOS"
export PATH="$PATH:/Applications/WezTerm.app/Contents/MacOS"

export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# 暂时不开代理
# proxy for:
# https://kao-laa.site/user/shop
# export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890

# graphviz
export GRAPHVIZ_DOT="/opt/homebrew/bin/dot"


export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include $CPPFLAGS"

# llvm
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++ $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include $CPPFLAGS"
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

# java
# gradle
export GRADLE_USER_HOME="/Users/vermin/.gradle/"

# gradle 4.10
export GRADLE_HOME="/Users/vermin/code_tools/gradle-4.10.3/"
export JAVA_HOME="/Library/Java/JavaVirtualMachines/liberica-jdk-8-full.jdk/Contents/Home"

# gradle 7.3
# export GRADLE_HOME="/Users/vermin/code_tools/gradle-7.3/"
# export JAVA_HOME="/Library/Java/JavaVirtualMachines/liberica-jdk-17-full.jdk/Contents/Home"
# export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"
# export JDK_JAVA_OPTIONS="-server -Xms8G -Xmx20G -XX:ReservedCodeCacheSize=512m -XX:+UseConcMarkSweepGC -XX:SoftRefLRUPolicyMSPerMB=200 -ea -Dsun.io.useCanonCaches=false -Djava.net.preferIPv4Stack=true -XX:+HeapDumpOnOutOfMemoryError -XX:-OmitStackTraceInFastThrow "
export PATH="${GRADLE_HOME}/bin:$PATH"
export PATH="${JAVA_HOME}/bin:$PATH"
export GROOVY_HOME="/opt/homebrew/opt/groovy/libexec"

# cat
export CAT_HOME="/data/appdatas/cat/"

# go
export GOROOT="/opt/homebrew/Cellar/go/1.24.5/libexec"
#export GOPROXY=https://goproxy.cn
export GOPATH="$HOME/.go"
export PATH="$GOPATH/bin:$PATH"

export HISTCONTROL=erasedups
export TERM=xterm-256color
export LANG=zh_CN.UTF-8

# git diff 用less进行分页，需要配置less参数，防止乱码
export LESS=eFRX
export LESSCHARSET=utf-8

# 以下为history配置
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent .slime-history.eld
setopt COMBINING_CHARS
# ----- history end --

# ----- zim begin

zstyle ':zim:zmodule' use 'degit'
ZIM_HOME=~/.zim

# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize modules.
source ${ZIM_HOME}/init.zsh

# ----- zim end

[[ -s "/opt/homebrew/etc/grc.zsh" ]] && source /opt/homebrew/etc/grc.zsh

export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
echo 'export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"' >> ~/.zprofile
echo 'export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"' >> ~/.zprofile
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"

export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
ulimit -n unlimited
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# brew install fzf
source <(fzf --zsh)
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf配置
# fd替换find，需要先安装fd:
#    brew install fd
export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build} --type f"

# 展示
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --preview '(highlight -O ansi {} || cat {}) 2> /dev/null | head -500'"
